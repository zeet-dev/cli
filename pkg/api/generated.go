// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package api

import (
	"context"
	"time"

	"github.com/Khan/genqlient/graphql"
	"github.com/google/uuid"
)

type DeploymentStatus string

const (
	DeploymentStatusBuildPending      DeploymentStatus = "BUILD_PENDING"
	DeploymentStatusBuildInProgress   DeploymentStatus = "BUILD_IN_PROGRESS"
	DeploymentStatusBuildFailed       DeploymentStatus = "BUILD_FAILED"
	DeploymentStatusBuildSucceeded    DeploymentStatus = "BUILD_SUCCEEDED"
	DeploymentStatusDeployPending     DeploymentStatus = "DEPLOY_PENDING"
	DeploymentStatusDeployInProgress  DeploymentStatus = "DEPLOY_IN_PROGRESS"
	DeploymentStatusReleaseInProgress DeploymentStatus = "RELEASE_IN_PROGRESS"
	DeploymentStatusDeployFailed      DeploymentStatus = "DEPLOY_FAILED"
	DeploymentStatusDeploySucceeded   DeploymentStatus = "DEPLOY_SUCCEEDED"
	DeploymentStatusBuildAborted      DeploymentStatus = "BUILD_ABORTED"
	DeploymentStatusDeployStopped     DeploymentStatus = "DEPLOY_STOPPED"
	DeploymentStatusDeployHealhty     DeploymentStatus = "DEPLOY_HEALHTY"
	DeploymentStatusDeployCrashing    DeploymentStatus = "DEPLOY_CRASHING"
)

type EnvVarInput struct {
	Name   string `json:"name"`
	Value  string `json:"value"`
	Sealed bool   `json:"sealed"`
}

// GetName returns EnvVarInput.Name, and is useful for accessing the field via an interface.
func (v *EnvVarInput) GetName() string { return v.Name }

// GetValue returns EnvVarInput.Value, and is useful for accessing the field via an interface.
func (v *EnvVarInput) GetValue() string { return v.Value }

// GetSealed returns EnvVarInput.Sealed, and is useful for accessing the field via an interface.
func (v *EnvVarInput) GetSealed() bool { return v.Sealed }

// GetCloudAWSCurrentUser includes the requested fields of the GraphQL type User.
type GetCloudAWSCurrentUser struct {
	AwsAccount GetCloudAWSCurrentUserAwsAccountAWSAccount `json:"awsAccount"`
}

// GetAwsAccount returns GetCloudAWSCurrentUser.AwsAccount, and is useful for accessing the field via an interface.
func (v *GetCloudAWSCurrentUser) GetAwsAccount() GetCloudAWSCurrentUserAwsAccountAWSAccount {
	return v.AwsAccount
}

// GetCloudAWSCurrentUserAwsAccountAWSAccount includes the requested fields of the GraphQL type AWSAccount.
type GetCloudAWSCurrentUserAwsAccountAWSAccount struct {
	Id         uuid.UUID `json:"id"`
	RoleARN    string    `json:"roleARN"`
	ExternalID string    `json:"externalID"`
}

// GetId returns GetCloudAWSCurrentUserAwsAccountAWSAccount.Id, and is useful for accessing the field via an interface.
func (v *GetCloudAWSCurrentUserAwsAccountAWSAccount) GetId() uuid.UUID { return v.Id }

// GetRoleARN returns GetCloudAWSCurrentUserAwsAccountAWSAccount.RoleARN, and is useful for accessing the field via an interface.
func (v *GetCloudAWSCurrentUserAwsAccountAWSAccount) GetRoleARN() string { return v.RoleARN }

// GetExternalID returns GetCloudAWSCurrentUserAwsAccountAWSAccount.ExternalID, and is useful for accessing the field via an interface.
func (v *GetCloudAWSCurrentUserAwsAccountAWSAccount) GetExternalID() string { return v.ExternalID }

// GetCloudAWSResponse is returned by GetCloudAWS on success.
type GetCloudAWSResponse struct {
	CurrentUser GetCloudAWSCurrentUser `json:"currentUser"`
}

// GetCurrentUser returns GetCloudAWSResponse.CurrentUser, and is useful for accessing the field via an interface.
func (v *GetCloudAWSResponse) GetCurrentUser() GetCloudAWSCurrentUser { return v.CurrentUser }

// GetCloudDigitalOceanCurrentUser includes the requested fields of the GraphQL type User.
type GetCloudDigitalOceanCurrentUser struct {
	DoAccount GetCloudDigitalOceanCurrentUserDoAccountDOAccount `json:"doAccount"`
}

// GetDoAccount returns GetCloudDigitalOceanCurrentUser.DoAccount, and is useful for accessing the field via an interface.
func (v *GetCloudDigitalOceanCurrentUser) GetDoAccount() GetCloudDigitalOceanCurrentUserDoAccountDOAccount {
	return v.DoAccount
}

// GetCloudDigitalOceanCurrentUserDoAccountDOAccount includes the requested fields of the GraphQL type DOAccount.
type GetCloudDigitalOceanCurrentUserDoAccountDOAccount struct {
	Id          uuid.UUID `json:"id"`
	AccessToken string    `json:"accessToken"`
}

// GetId returns GetCloudDigitalOceanCurrentUserDoAccountDOAccount.Id, and is useful for accessing the field via an interface.
func (v *GetCloudDigitalOceanCurrentUserDoAccountDOAccount) GetId() uuid.UUID { return v.Id }

// GetAccessToken returns GetCloudDigitalOceanCurrentUserDoAccountDOAccount.AccessToken, and is useful for accessing the field via an interface.
func (v *GetCloudDigitalOceanCurrentUserDoAccountDOAccount) GetAccessToken() string {
	return v.AccessToken
}

// GetCloudDigitalOceanResponse is returned by GetCloudDigitalOcean on success.
type GetCloudDigitalOceanResponse struct {
	CurrentUser GetCloudDigitalOceanCurrentUser `json:"currentUser"`
}

// GetCurrentUser returns GetCloudDigitalOceanResponse.CurrentUser, and is useful for accessing the field via an interface.
func (v *GetCloudDigitalOceanResponse) GetCurrentUser() GetCloudDigitalOceanCurrentUser {
	return v.CurrentUser
}

// GetCloudGCPCurrentUser includes the requested fields of the GraphQL type User.
type GetCloudGCPCurrentUser struct {
	GcpAccount GetCloudGCPCurrentUserGcpAccountGCPAccount `json:"gcpAccount"`
}

// GetGcpAccount returns GetCloudGCPCurrentUser.GcpAccount, and is useful for accessing the field via an interface.
func (v *GetCloudGCPCurrentUser) GetGcpAccount() GetCloudGCPCurrentUserGcpAccountGCPAccount {
	return v.GcpAccount
}

// GetCloudGCPCurrentUserGcpAccountGCPAccount includes the requested fields of the GraphQL type GCPAccount.
type GetCloudGCPCurrentUserGcpAccountGCPAccount struct {
	Id          uuid.UUID `json:"id"`
	ProjectID   string    `json:"projectID"`
	Credentials string    `json:"credentials"`
}

// GetId returns GetCloudGCPCurrentUserGcpAccountGCPAccount.Id, and is useful for accessing the field via an interface.
func (v *GetCloudGCPCurrentUserGcpAccountGCPAccount) GetId() uuid.UUID { return v.Id }

// GetProjectID returns GetCloudGCPCurrentUserGcpAccountGCPAccount.ProjectID, and is useful for accessing the field via an interface.
func (v *GetCloudGCPCurrentUserGcpAccountGCPAccount) GetProjectID() string { return v.ProjectID }

// GetCredentials returns GetCloudGCPCurrentUserGcpAccountGCPAccount.Credentials, and is useful for accessing the field via an interface.
func (v *GetCloudGCPCurrentUserGcpAccountGCPAccount) GetCredentials() string { return v.Credentials }

// GetCloudGCPResponse is returned by GetCloudGCP on success.
type GetCloudGCPResponse struct {
	CurrentUser GetCloudGCPCurrentUser `json:"currentUser"`
}

// GetCurrentUser returns GetCloudGCPResponse.CurrentUser, and is useful for accessing the field via an interface.
func (v *GetCloudGCPResponse) GetCurrentUser() GetCloudGCPCurrentUser { return v.CurrentUser }

// GetCloudLinodeCurrentUser includes the requested fields of the GraphQL type User.
type GetCloudLinodeCurrentUser struct {
	LinodeAccount GetCloudLinodeCurrentUserLinodeAccount `json:"linodeAccount"`
}

// GetLinodeAccount returns GetCloudLinodeCurrentUser.LinodeAccount, and is useful for accessing the field via an interface.
func (v *GetCloudLinodeCurrentUser) GetLinodeAccount() GetCloudLinodeCurrentUserLinodeAccount {
	return v.LinodeAccount
}

// GetCloudLinodeCurrentUserLinodeAccount includes the requested fields of the GraphQL type LinodeAccount.
type GetCloudLinodeCurrentUserLinodeAccount struct {
	Id          uuid.UUID `json:"id"`
	AccessToken string    `json:"accessToken"`
}

// GetId returns GetCloudLinodeCurrentUserLinodeAccount.Id, and is useful for accessing the field via an interface.
func (v *GetCloudLinodeCurrentUserLinodeAccount) GetId() uuid.UUID { return v.Id }

// GetAccessToken returns GetCloudLinodeCurrentUserLinodeAccount.AccessToken, and is useful for accessing the field via an interface.
func (v *GetCloudLinodeCurrentUserLinodeAccount) GetAccessToken() string { return v.AccessToken }

// GetCloudLinodeResponse is returned by GetCloudLinode on success.
type GetCloudLinodeResponse struct {
	CurrentUser GetCloudLinodeCurrentUser `json:"currentUser"`
}

// GetCurrentUser returns GetCloudLinodeResponse.CurrentUser, and is useful for accessing the field via an interface.
func (v *GetCloudLinodeResponse) GetCurrentUser() GetCloudLinodeCurrentUser { return v.CurrentUser }

type JobRunState string

const (
	JobRunStateJobRunStarting  JobRunState = "JOB_RUN_STARTING"
	JobRunStateJobRunRunning   JobRunState = "JOB_RUN_RUNNING"
	JobRunStateJobRunFailed    JobRunState = "JOB_RUN_FAILED"
	JobRunStateJobRunSucceeded JobRunState = "JOB_RUN_SUCCEEDED"
)

// __GetCloudAWSInput is used internally by genqlient
type __GetCloudAWSInput struct {
	Id uuid.UUID `json:"id"`
}

// GetId returns __GetCloudAWSInput.Id, and is useful for accessing the field via an interface.
func (v *__GetCloudAWSInput) GetId() uuid.UUID { return v.Id }

// __GetCloudDigitalOceanInput is used internally by genqlient
type __GetCloudDigitalOceanInput struct {
	Id uuid.UUID `json:"id"`
}

// GetId returns __GetCloudDigitalOceanInput.Id, and is useful for accessing the field via an interface.
func (v *__GetCloudDigitalOceanInput) GetId() uuid.UUID { return v.Id }

// __GetCloudGCPInput is used internally by genqlient
type __GetCloudGCPInput struct {
	Id uuid.UUID `json:"id"`
}

// GetId returns __GetCloudGCPInput.Id, and is useful for accessing the field via an interface.
func (v *__GetCloudGCPInput) GetId() uuid.UUID { return v.Id }

// __GetCloudLinodeInput is used internally by genqlient
type __GetCloudLinodeInput struct {
	Id uuid.UUID `json:"id"`
}

// GetId returns __GetCloudLinodeInput.Id, and is useful for accessing the field via an interface.
func (v *__GetCloudLinodeInput) GetId() uuid.UUID { return v.Id }

// __buildRepoDefaultBranchInput is used internally by genqlient
type __buildRepoDefaultBranchInput struct {
	Id      uuid.UUID `json:"id"`
	NoCache bool      `json:"noCache"`
}

// GetId returns __buildRepoDefaultBranchInput.Id, and is useful for accessing the field via an interface.
func (v *__buildRepoDefaultBranchInput) GetId() uuid.UUID { return v.Id }

// GetNoCache returns __buildRepoDefaultBranchInput.NoCache, and is useful for accessing the field via an interface.
func (v *__buildRepoDefaultBranchInput) GetNoCache() bool { return v.NoCache }

// __buildRepoInput is used internally by genqlient
type __buildRepoInput struct {
	Id      uuid.UUID `json:"id"`
	Branch  string    `json:"branch"`
	NoCache bool      `json:"noCache"`
}

// GetId returns __buildRepoInput.Id, and is useful for accessing the field via an interface.
func (v *__buildRepoInput) GetId() uuid.UUID { return v.Id }

// GetBranch returns __buildRepoInput.Branch, and is useful for accessing the field via an interface.
func (v *__buildRepoInput) GetBranch() string { return v.Branch }

// GetNoCache returns __buildRepoInput.NoCache, and is useful for accessing the field via an interface.
func (v *__buildRepoInput) GetNoCache() bool { return v.NoCache }

// __deleteInput is used internally by genqlient
type __deleteInput struct {
	Id uuid.UUID `json:"id"`
}

// GetId returns __deleteInput.Id, and is useful for accessing the field via an interface.
func (v *__deleteInput) GetId() uuid.UUID { return v.Id }

// __deployRepoBranchInput is used internally by genqlient
type __deployRepoBranchInput struct {
	Branch    string    `json:"branch"`
	ProjectId uuid.UUID `json:"projectId"`
}

// GetBranch returns __deployRepoBranchInput.Branch, and is useful for accessing the field via an interface.
func (v *__deployRepoBranchInput) GetBranch() string { return v.Branch }

// GetProjectId returns __deployRepoBranchInput.ProjectId, and is useful for accessing the field via an interface.
func (v *__deployRepoBranchInput) GetProjectId() uuid.UUID { return v.ProjectId }

// __getBuildLogsInput is used internally by genqlient
type __getBuildLogsInput struct {
	Id uuid.UUID `json:"id"`
}

// GetId returns __getBuildLogsInput.Id, and is useful for accessing the field via an interface.
func (v *__getBuildLogsInput) GetId() uuid.UUID { return v.Id }

// __getClusterKubeconfigInput is used internally by genqlient
type __getClusterKubeconfigInput struct {
	Id uuid.UUID `json:"id"`
}

// GetId returns __getClusterKubeconfigInput.Id, and is useful for accessing the field via an interface.
func (v *__getClusterKubeconfigInput) GetId() uuid.UUID { return v.Id }

// __getDeploymentInfoInput is used internally by genqlient
type __getDeploymentInfoInput struct {
	Id uuid.UUID `json:"id"`
}

// GetId returns __getDeploymentInfoInput.Id, and is useful for accessing the field via an interface.
func (v *__getDeploymentInfoInput) GetId() uuid.UUID { return v.Id }

// __getDeploymentLogsInput is used internally by genqlient
type __getDeploymentLogsInput struct {
	Id uuid.UUID `json:"id"`
}

// GetId returns __getDeploymentLogsInput.Id, and is useful for accessing the field via an interface.
func (v *__getDeploymentLogsInput) GetId() uuid.UUID { return v.Id }

// __getDeploymentReplicaStatusInput is used internally by genqlient
type __getDeploymentReplicaStatusInput struct {
	Id uuid.UUID `json:"id"`
}

// GetId returns __getDeploymentReplicaStatusInput.Id, and is useful for accessing the field via an interface.
func (v *__getDeploymentReplicaStatusInput) GetId() uuid.UUID { return v.Id }

// __getEnvVarsInput is used internally by genqlient
type __getEnvVarsInput struct {
	Id uuid.UUID `json:"id"`
}

// GetId returns __getEnvVarsInput.Id, and is useful for accessing the field via an interface.
func (v *__getEnvVarsInput) GetId() uuid.UUID { return v.Id }

// __getJobInput is used internally by genqlient
type __getJobInput struct {
	ProjectID uuid.UUID `json:"projectID"`
	JobID     uuid.UUID `json:"jobID"`
}

// GetProjectID returns __getJobInput.ProjectID, and is useful for accessing the field via an interface.
func (v *__getJobInput) GetProjectID() uuid.UUID { return v.ProjectID }

// GetJobID returns __getJobInput.JobID, and is useful for accessing the field via an interface.
func (v *__getJobInput) GetJobID() uuid.UUID { return v.JobID }

// __getJobLogsInput is used internally by genqlient
type __getJobLogsInput struct {
	RepoID uuid.UUID `json:"repoID"`
	JobID  uuid.UUID `json:"jobID"`
}

// GetRepoID returns __getJobLogsInput.RepoID, and is useful for accessing the field via an interface.
func (v *__getJobLogsInput) GetRepoID() uuid.UUID { return v.RepoID }

// GetJobID returns __getJobLogsInput.JobID, and is useful for accessing the field via an interface.
func (v *__getJobLogsInput) GetJobID() uuid.UUID { return v.JobID }

// __getLatestDeploymentInput is used internally by genqlient
type __getLatestDeploymentInput struct {
	Project string `json:"project"`
	Branch  string `json:"branch"`
}

// GetProject returns __getLatestDeploymentInput.Project, and is useful for accessing the field via an interface.
func (v *__getLatestDeploymentInput) GetProject() string { return v.Project }

// GetBranch returns __getLatestDeploymentInput.Branch, and is useful for accessing the field via an interface.
func (v *__getLatestDeploymentInput) GetBranch() string { return v.Branch }

// __getProductionBranchInput is used internally by genqlient
type __getProductionBranchInput struct {
	RepoId uuid.UUID `json:"repoId"`
}

// GetRepoId returns __getProductionBranchInput.RepoId, and is useful for accessing the field via an interface.
func (v *__getProductionBranchInput) GetRepoId() uuid.UUID { return v.RepoId }

// __getProductionDeploymentInput is used internally by genqlient
type __getProductionDeploymentInput struct {
	Project string `json:"project"`
}

// GetProject returns __getProductionDeploymentInput.Project, and is useful for accessing the field via an interface.
func (v *__getProductionDeploymentInput) GetProject() string { return v.Project }

// __getProjectByPathInput is used internally by genqlient
type __getProjectByPathInput struct {
	Path string `json:"path"`
}

// GetPath returns __getProjectByPathInput.Path, and is useful for accessing the field via an interface.
func (v *__getProjectByPathInput) GetPath() string { return v.Path }

// __getProjectPathInput is used internally by genqlient
type __getProjectPathInput struct {
	Id uuid.UUID `json:"id"`
}

// GetId returns __getProjectPathInput.Id, and is useful for accessing the field via an interface.
func (v *__getProjectPathInput) GetId() uuid.UUID { return v.Id }

// __getRepoInput is used internally by genqlient
type __getRepoInput struct {
	Path string `json:"path"`
}

// GetPath returns __getRepoInput.Path, and is useful for accessing the field via an interface.
func (v *__getRepoInput) GetPath() string { return v.Path }

// __getRuntimeLogsInput is used internally by genqlient
type __getRuntimeLogsInput struct {
	Id uuid.UUID `json:"id"`
}

// GetId returns __getRuntimeLogsInput.Id, and is useful for accessing the field via an interface.
func (v *__getRuntimeLogsInput) GetId() uuid.UUID { return v.Id }

// __runJobInput is used internally by genqlient
type __runJobInput struct {
	Id      uuid.UUID `json:"id"`
	Command string    `json:"command"`
	Build   bool      `json:"build"`
}

// GetId returns __runJobInput.Id, and is useful for accessing the field via an interface.
func (v *__runJobInput) GetId() uuid.UUID { return v.Id }

// GetCommand returns __runJobInput.Command, and is useful for accessing the field via an interface.
func (v *__runJobInput) GetCommand() string { return v.Command }

// GetBuild returns __runJobInput.Build, and is useful for accessing the field via an interface.
func (v *__runJobInput) GetBuild() bool { return v.Build }

// __setEnvVarsInput is used internally by genqlient
type __setEnvVarsInput struct {
	Id   uuid.UUID     `json:"id"`
	Envs []EnvVarInput `json:"envs"`
}

// GetId returns __setEnvVarsInput.Id, and is useful for accessing the field via an interface.
func (v *__setEnvVarsInput) GetId() uuid.UUID { return v.Id }

// GetEnvs returns __setEnvVarsInput.Envs, and is useful for accessing the field via an interface.
func (v *__setEnvVarsInput) GetEnvs() []EnvVarInput { return v.Envs }

// __updateBranchInput is used internally by genqlient
type __updateBranchInput struct {
	Image      string    `json:"image"`
	Deploy     bool      `json:"deploy"`
	ProjectID  uuid.UUID `json:"projectID"`
	BranchName string    `json:"branchName"`
}

// GetImage returns __updateBranchInput.Image, and is useful for accessing the field via an interface.
func (v *__updateBranchInput) GetImage() string { return v.Image }

// GetDeploy returns __updateBranchInput.Deploy, and is useful for accessing the field via an interface.
func (v *__updateBranchInput) GetDeploy() bool { return v.Deploy }

// GetProjectID returns __updateBranchInput.ProjectID, and is useful for accessing the field via an interface.
func (v *__updateBranchInput) GetProjectID() uuid.UUID { return v.ProjectID }

// GetBranchName returns __updateBranchInput.BranchName, and is useful for accessing the field via an interface.
func (v *__updateBranchInput) GetBranchName() string { return v.BranchName }

// __updateClusterInput is used internally by genqlient
type __updateClusterInput struct {
	Id   uuid.UUID `json:"id"`
	File string    `json:"file"`
}

// GetId returns __updateClusterInput.Id, and is useful for accessing the field via an interface.
func (v *__updateClusterInput) GetId() uuid.UUID { return v.Id }

// GetFile returns __updateClusterInput.File, and is useful for accessing the field via an interface.
func (v *__updateClusterInput) GetFile() string { return v.File }

// __updateProjectInput is used internally by genqlient
type __updateProjectInput struct {
	ProjectID uuid.UUID `json:"projectID"`
	Image     string    `json:"image"`
}

// GetProjectID returns __updateProjectInput.ProjectID, and is useful for accessing the field via an interface.
func (v *__updateProjectInput) GetProjectID() uuid.UUID { return v.ProjectID }

// GetImage returns __updateProjectInput.Image, and is useful for accessing the field via an interface.
func (v *__updateProjectInput) GetImage() string { return v.Image }

// buildRepoBuildRepo includes the requested fields of the GraphQL type Repo.
type buildRepoBuildRepo struct {
	Deployments []buildRepoBuildRepoDeploymentsDeployment `json:"deployments"`
}

// GetDeployments returns buildRepoBuildRepo.Deployments, and is useful for accessing the field via an interface.
func (v *buildRepoBuildRepo) GetDeployments() []buildRepoBuildRepoDeploymentsDeployment {
	return v.Deployments
}

// buildRepoBuildRepoDeploymentsDeployment includes the requested fields of the GraphQL type Deployment.
type buildRepoBuildRepoDeploymentsDeployment struct {
	Id              uuid.UUID        `json:"id"`
	Status          DeploymentStatus `json:"status"`
	Branch          string           `json:"branch"`
	Endpoints       []string         `json:"endpoints"`
	PrivateEndpoint string           `json:"privateEndpoint"`
}

// GetId returns buildRepoBuildRepoDeploymentsDeployment.Id, and is useful for accessing the field via an interface.
func (v *buildRepoBuildRepoDeploymentsDeployment) GetId() uuid.UUID { return v.Id }

// GetStatus returns buildRepoBuildRepoDeploymentsDeployment.Status, and is useful for accessing the field via an interface.
func (v *buildRepoBuildRepoDeploymentsDeployment) GetStatus() DeploymentStatus { return v.Status }

// GetBranch returns buildRepoBuildRepoDeploymentsDeployment.Branch, and is useful for accessing the field via an interface.
func (v *buildRepoBuildRepoDeploymentsDeployment) GetBranch() string { return v.Branch }

// GetEndpoints returns buildRepoBuildRepoDeploymentsDeployment.Endpoints, and is useful for accessing the field via an interface.
func (v *buildRepoBuildRepoDeploymentsDeployment) GetEndpoints() []string { return v.Endpoints }

// GetPrivateEndpoint returns buildRepoBuildRepoDeploymentsDeployment.PrivateEndpoint, and is useful for accessing the field via an interface.
func (v *buildRepoBuildRepoDeploymentsDeployment) GetPrivateEndpoint() string {
	return v.PrivateEndpoint
}

// buildRepoDefaultBranchBuildRepo includes the requested fields of the GraphQL type Repo.
type buildRepoDefaultBranchBuildRepo struct {
	Deployments []buildRepoDefaultBranchBuildRepoDeploymentsDeployment `json:"deployments"`
}

// GetDeployments returns buildRepoDefaultBranchBuildRepo.Deployments, and is useful for accessing the field via an interface.
func (v *buildRepoDefaultBranchBuildRepo) GetDeployments() []buildRepoDefaultBranchBuildRepoDeploymentsDeployment {
	return v.Deployments
}

// buildRepoDefaultBranchBuildRepoDeploymentsDeployment includes the requested fields of the GraphQL type Deployment.
type buildRepoDefaultBranchBuildRepoDeploymentsDeployment struct {
	Id              uuid.UUID        `json:"id"`
	Status          DeploymentStatus `json:"status"`
	Branch          string           `json:"branch"`
	Endpoints       []string         `json:"endpoints"`
	PrivateEndpoint string           `json:"privateEndpoint"`
}

// GetId returns buildRepoDefaultBranchBuildRepoDeploymentsDeployment.Id, and is useful for accessing the field via an interface.
func (v *buildRepoDefaultBranchBuildRepoDeploymentsDeployment) GetId() uuid.UUID { return v.Id }

// GetStatus returns buildRepoDefaultBranchBuildRepoDeploymentsDeployment.Status, and is useful for accessing the field via an interface.
func (v *buildRepoDefaultBranchBuildRepoDeploymentsDeployment) GetStatus() DeploymentStatus {
	return v.Status
}

// GetBranch returns buildRepoDefaultBranchBuildRepoDeploymentsDeployment.Branch, and is useful for accessing the field via an interface.
func (v *buildRepoDefaultBranchBuildRepoDeploymentsDeployment) GetBranch() string { return v.Branch }

// GetEndpoints returns buildRepoDefaultBranchBuildRepoDeploymentsDeployment.Endpoints, and is useful for accessing the field via an interface.
func (v *buildRepoDefaultBranchBuildRepoDeploymentsDeployment) GetEndpoints() []string {
	return v.Endpoints
}

// GetPrivateEndpoint returns buildRepoDefaultBranchBuildRepoDeploymentsDeployment.PrivateEndpoint, and is useful for accessing the field via an interface.
func (v *buildRepoDefaultBranchBuildRepoDeploymentsDeployment) GetPrivateEndpoint() string {
	return v.PrivateEndpoint
}

// buildRepoDefaultBranchResponse is returned by buildRepoDefaultBranch on success.
type buildRepoDefaultBranchResponse struct {
	BuildRepo buildRepoDefaultBranchBuildRepo `json:"buildRepo"`
}

// GetBuildRepo returns buildRepoDefaultBranchResponse.BuildRepo, and is useful for accessing the field via an interface.
func (v *buildRepoDefaultBranchResponse) GetBuildRepo() buildRepoDefaultBranchBuildRepo {
	return v.BuildRepo
}

// buildRepoResponse is returned by buildRepo on success.
type buildRepoResponse struct {
	BuildRepo buildRepoBuildRepo `json:"buildRepo"`
}

// GetBuildRepo returns buildRepoResponse.BuildRepo, and is useful for accessing the field via an interface.
func (v *buildRepoResponse) GetBuildRepo() buildRepoBuildRepo { return v.BuildRepo }

// deleteResponse is returned by delete on success.
type deleteResponse struct {
	DeleteRepo bool `json:"deleteRepo"`
}

// GetDeleteRepo returns deleteResponse.DeleteRepo, and is useful for accessing the field via an interface.
func (v *deleteResponse) GetDeleteRepo() bool { return v.DeleteRepo }

// deployRepoBranchDeployRepoBranchRepo includes the requested fields of the GraphQL type Repo.
type deployRepoBranchDeployRepoBranchRepo struct {
	Deployments []deployRepoBranchDeployRepoBranchRepoDeploymentsDeployment `json:"deployments"`
}

// GetDeployments returns deployRepoBranchDeployRepoBranchRepo.Deployments, and is useful for accessing the field via an interface.
func (v *deployRepoBranchDeployRepoBranchRepo) GetDeployments() []deployRepoBranchDeployRepoBranchRepoDeploymentsDeployment {
	return v.Deployments
}

// deployRepoBranchDeployRepoBranchRepoDeploymentsDeployment includes the requested fields of the GraphQL type Deployment.
type deployRepoBranchDeployRepoBranchRepoDeploymentsDeployment struct {
	Id              uuid.UUID        `json:"id"`
	Status          DeploymentStatus `json:"status"`
	Branch          string           `json:"branch"`
	Endpoints       []string         `json:"endpoints"`
	PrivateEndpoint string           `json:"privateEndpoint"`
}

// GetId returns deployRepoBranchDeployRepoBranchRepoDeploymentsDeployment.Id, and is useful for accessing the field via an interface.
func (v *deployRepoBranchDeployRepoBranchRepoDeploymentsDeployment) GetId() uuid.UUID { return v.Id }

// GetStatus returns deployRepoBranchDeployRepoBranchRepoDeploymentsDeployment.Status, and is useful for accessing the field via an interface.
func (v *deployRepoBranchDeployRepoBranchRepoDeploymentsDeployment) GetStatus() DeploymentStatus {
	return v.Status
}

// GetBranch returns deployRepoBranchDeployRepoBranchRepoDeploymentsDeployment.Branch, and is useful for accessing the field via an interface.
func (v *deployRepoBranchDeployRepoBranchRepoDeploymentsDeployment) GetBranch() string {
	return v.Branch
}

// GetEndpoints returns deployRepoBranchDeployRepoBranchRepoDeploymentsDeployment.Endpoints, and is useful for accessing the field via an interface.
func (v *deployRepoBranchDeployRepoBranchRepoDeploymentsDeployment) GetEndpoints() []string {
	return v.Endpoints
}

// GetPrivateEndpoint returns deployRepoBranchDeployRepoBranchRepoDeploymentsDeployment.PrivateEndpoint, and is useful for accessing the field via an interface.
func (v *deployRepoBranchDeployRepoBranchRepoDeploymentsDeployment) GetPrivateEndpoint() string {
	return v.PrivateEndpoint
}

// deployRepoBranchResponse is returned by deployRepoBranch on success.
type deployRepoBranchResponse struct {
	DeployRepoBranch deployRepoBranchDeployRepoBranchRepo `json:"deployRepoBranch"`
}

// GetDeployRepoBranch returns deployRepoBranchResponse.DeployRepoBranch, and is useful for accessing the field via an interface.
func (v *deployRepoBranchResponse) GetDeployRepoBranch() deployRepoBranchDeployRepoBranchRepo {
	return v.DeployRepoBranch
}

// getBuildLogsCurrentUser includes the requested fields of the GraphQL type User.
type getBuildLogsCurrentUser struct {
	Deployment getBuildLogsCurrentUserDeployment `json:"deployment"`
}

// GetDeployment returns getBuildLogsCurrentUser.Deployment, and is useful for accessing the field via an interface.
func (v *getBuildLogsCurrentUser) GetDeployment() getBuildLogsCurrentUserDeployment {
	return v.Deployment
}

// getBuildLogsCurrentUserDeployment includes the requested fields of the GraphQL type Deployment.
type getBuildLogsCurrentUserDeployment struct {
	Build getBuildLogsCurrentUserDeploymentBuild `json:"build"`
}

// GetBuild returns getBuildLogsCurrentUserDeployment.Build, and is useful for accessing the field via an interface.
func (v *getBuildLogsCurrentUserDeployment) GetBuild() getBuildLogsCurrentUserDeploymentBuild {
	return v.Build
}

// getBuildLogsCurrentUserDeploymentBuild includes the requested fields of the GraphQL type Build.
type getBuildLogsCurrentUserDeploymentBuild struct {
	Logs getBuildLogsCurrentUserDeploymentBuildLogs `json:"logs"`
}

// GetLogs returns getBuildLogsCurrentUserDeploymentBuild.Logs, and is useful for accessing the field via an interface.
func (v *getBuildLogsCurrentUserDeploymentBuild) GetLogs() getBuildLogsCurrentUserDeploymentBuildLogs {
	return v.Logs
}

// getBuildLogsCurrentUserDeploymentBuildLogs includes the requested fields of the GraphQL type Logs.
type getBuildLogsCurrentUserDeploymentBuildLogs struct {
	Entries []getBuildLogsCurrentUserDeploymentBuildLogsEntriesLogEntry `json:"entries"`
}

// GetEntries returns getBuildLogsCurrentUserDeploymentBuildLogs.Entries, and is useful for accessing the field via an interface.
func (v *getBuildLogsCurrentUserDeploymentBuildLogs) GetEntries() []getBuildLogsCurrentUserDeploymentBuildLogsEntriesLogEntry {
	return v.Entries
}

// getBuildLogsCurrentUserDeploymentBuildLogsEntriesLogEntry includes the requested fields of the GraphQL type LogEntry.
type getBuildLogsCurrentUserDeploymentBuildLogsEntriesLogEntry struct {
	Text      string    `json:"text"`
	Timestamp time.Time `json:"timestamp"`
}

// GetText returns getBuildLogsCurrentUserDeploymentBuildLogsEntriesLogEntry.Text, and is useful for accessing the field via an interface.
func (v *getBuildLogsCurrentUserDeploymentBuildLogsEntriesLogEntry) GetText() string { return v.Text }

// GetTimestamp returns getBuildLogsCurrentUserDeploymentBuildLogsEntriesLogEntry.Timestamp, and is useful for accessing the field via an interface.
func (v *getBuildLogsCurrentUserDeploymentBuildLogsEntriesLogEntry) GetTimestamp() time.Time {
	return v.Timestamp
}

// getBuildLogsResponse is returned by getBuildLogs on success.
type getBuildLogsResponse struct {
	CurrentUser getBuildLogsCurrentUser `json:"currentUser"`
}

// GetCurrentUser returns getBuildLogsResponse.CurrentUser, and is useful for accessing the field via an interface.
func (v *getBuildLogsResponse) GetCurrentUser() getBuildLogsCurrentUser { return v.CurrentUser }

// getClusterKubeconfigCurrentUser includes the requested fields of the GraphQL type User.
type getClusterKubeconfigCurrentUser struct {
	Cluster getClusterKubeconfigCurrentUserCluster `json:"cluster"`
}

// GetCluster returns getClusterKubeconfigCurrentUser.Cluster, and is useful for accessing the field via an interface.
func (v *getClusterKubeconfigCurrentUser) GetCluster() getClusterKubeconfigCurrentUserCluster {
	return v.Cluster
}

// getClusterKubeconfigCurrentUserCluster includes the requested fields of the GraphQL type Cluster.
type getClusterKubeconfigCurrentUserCluster struct {
	Id         uuid.UUID `json:"id"`
	Name       string    `json:"name"`
	Kubeconfig string    `json:"kubeconfig"`
}

// GetId returns getClusterKubeconfigCurrentUserCluster.Id, and is useful for accessing the field via an interface.
func (v *getClusterKubeconfigCurrentUserCluster) GetId() uuid.UUID { return v.Id }

// GetName returns getClusterKubeconfigCurrentUserCluster.Name, and is useful for accessing the field via an interface.
func (v *getClusterKubeconfigCurrentUserCluster) GetName() string { return v.Name }

// GetKubeconfig returns getClusterKubeconfigCurrentUserCluster.Kubeconfig, and is useful for accessing the field via an interface.
func (v *getClusterKubeconfigCurrentUserCluster) GetKubeconfig() string { return v.Kubeconfig }

// getClusterKubeconfigResponse is returned by getClusterKubeconfig on success.
type getClusterKubeconfigResponse struct {
	CurrentUser getClusterKubeconfigCurrentUser `json:"currentUser"`
}

// GetCurrentUser returns getClusterKubeconfigResponse.CurrentUser, and is useful for accessing the field via an interface.
func (v *getClusterKubeconfigResponse) GetCurrentUser() getClusterKubeconfigCurrentUser {
	return v.CurrentUser
}

// getCurrentUserCurrentUser includes the requested fields of the GraphQL type User.
type getCurrentUserCurrentUser struct {
	Id    uuid.UUID `json:"id"`
	Login string    `json:"login"`
}

// GetId returns getCurrentUserCurrentUser.Id, and is useful for accessing the field via an interface.
func (v *getCurrentUserCurrentUser) GetId() uuid.UUID { return v.Id }

// GetLogin returns getCurrentUserCurrentUser.Login, and is useful for accessing the field via an interface.
func (v *getCurrentUserCurrentUser) GetLogin() string { return v.Login }

// getCurrentUserResponse is returned by getCurrentUser on success.
type getCurrentUserResponse struct {
	CurrentUser getCurrentUserCurrentUser `json:"currentUser"`
}

// GetCurrentUser returns getCurrentUserResponse.CurrentUser, and is useful for accessing the field via an interface.
func (v *getCurrentUserResponse) GetCurrentUser() getCurrentUserCurrentUser { return v.CurrentUser }

// getDeploymentInfoCurrentUser includes the requested fields of the GraphQL type User.
type getDeploymentInfoCurrentUser struct {
	Deployment getDeploymentInfoCurrentUserDeployment `json:"deployment"`
}

// GetDeployment returns getDeploymentInfoCurrentUser.Deployment, and is useful for accessing the field via an interface.
func (v *getDeploymentInfoCurrentUser) GetDeployment() getDeploymentInfoCurrentUserDeployment {
	return v.Deployment
}

// getDeploymentInfoCurrentUserDeployment includes the requested fields of the GraphQL type Deployment.
type getDeploymentInfoCurrentUserDeployment struct {
	Id              uuid.UUID        `json:"id"`
	Status          DeploymentStatus `json:"status"`
	Endpoints       []string         `json:"endpoints"`
	PrivateEndpoint string           `json:"privateEndpoint"`
	ErrorMessage    string           `json:"errorMessage"`
}

// GetId returns getDeploymentInfoCurrentUserDeployment.Id, and is useful for accessing the field via an interface.
func (v *getDeploymentInfoCurrentUserDeployment) GetId() uuid.UUID { return v.Id }

// GetStatus returns getDeploymentInfoCurrentUserDeployment.Status, and is useful for accessing the field via an interface.
func (v *getDeploymentInfoCurrentUserDeployment) GetStatus() DeploymentStatus { return v.Status }

// GetEndpoints returns getDeploymentInfoCurrentUserDeployment.Endpoints, and is useful for accessing the field via an interface.
func (v *getDeploymentInfoCurrentUserDeployment) GetEndpoints() []string { return v.Endpoints }

// GetPrivateEndpoint returns getDeploymentInfoCurrentUserDeployment.PrivateEndpoint, and is useful for accessing the field via an interface.
func (v *getDeploymentInfoCurrentUserDeployment) GetPrivateEndpoint() string {
	return v.PrivateEndpoint
}

// GetErrorMessage returns getDeploymentInfoCurrentUserDeployment.ErrorMessage, and is useful for accessing the field via an interface.
func (v *getDeploymentInfoCurrentUserDeployment) GetErrorMessage() string { return v.ErrorMessage }

// getDeploymentInfoResponse is returned by getDeploymentInfo on success.
type getDeploymentInfoResponse struct {
	CurrentUser getDeploymentInfoCurrentUser `json:"currentUser"`
}

// GetCurrentUser returns getDeploymentInfoResponse.CurrentUser, and is useful for accessing the field via an interface.
func (v *getDeploymentInfoResponse) GetCurrentUser() getDeploymentInfoCurrentUser {
	return v.CurrentUser
}

// getDeploymentLogsCurrentUser includes the requested fields of the GraphQL type User.
type getDeploymentLogsCurrentUser struct {
	Deployment getDeploymentLogsCurrentUserDeployment `json:"deployment"`
}

// GetDeployment returns getDeploymentLogsCurrentUser.Deployment, and is useful for accessing the field via an interface.
func (v *getDeploymentLogsCurrentUser) GetDeployment() getDeploymentLogsCurrentUserDeployment {
	return v.Deployment
}

// getDeploymentLogsCurrentUserDeployment includes the requested fields of the GraphQL type Deployment.
type getDeploymentLogsCurrentUserDeployment struct {
	DeployStep getDeploymentLogsCurrentUserDeploymentDeployStepPipelineStep `json:"deployStep"`
}

// GetDeployStep returns getDeploymentLogsCurrentUserDeployment.DeployStep, and is useful for accessing the field via an interface.
func (v *getDeploymentLogsCurrentUserDeployment) GetDeployStep() getDeploymentLogsCurrentUserDeploymentDeployStepPipelineStep {
	return v.DeployStep
}

// getDeploymentLogsCurrentUserDeploymentDeployStepPipelineStep includes the requested fields of the GraphQL type PipelineStep.
type getDeploymentLogsCurrentUserDeploymentDeployStepPipelineStep struct {
	Logs getDeploymentLogsCurrentUserDeploymentDeployStepPipelineStepLogs `json:"logs"`
}

// GetLogs returns getDeploymentLogsCurrentUserDeploymentDeployStepPipelineStep.Logs, and is useful for accessing the field via an interface.
func (v *getDeploymentLogsCurrentUserDeploymentDeployStepPipelineStep) GetLogs() getDeploymentLogsCurrentUserDeploymentDeployStepPipelineStepLogs {
	return v.Logs
}

// getDeploymentLogsCurrentUserDeploymentDeployStepPipelineStepLogs includes the requested fields of the GraphQL type Logs.
type getDeploymentLogsCurrentUserDeploymentDeployStepPipelineStepLogs struct {
	Entries []getDeploymentLogsCurrentUserDeploymentDeployStepPipelineStepLogsEntriesLogEntry `json:"entries"`
}

// GetEntries returns getDeploymentLogsCurrentUserDeploymentDeployStepPipelineStepLogs.Entries, and is useful for accessing the field via an interface.
func (v *getDeploymentLogsCurrentUserDeploymentDeployStepPipelineStepLogs) GetEntries() []getDeploymentLogsCurrentUserDeploymentDeployStepPipelineStepLogsEntriesLogEntry {
	return v.Entries
}

// getDeploymentLogsCurrentUserDeploymentDeployStepPipelineStepLogsEntriesLogEntry includes the requested fields of the GraphQL type LogEntry.
type getDeploymentLogsCurrentUserDeploymentDeployStepPipelineStepLogsEntriesLogEntry struct {
	Text      string    `json:"text"`
	Timestamp time.Time `json:"timestamp"`
}

// GetText returns getDeploymentLogsCurrentUserDeploymentDeployStepPipelineStepLogsEntriesLogEntry.Text, and is useful for accessing the field via an interface.
func (v *getDeploymentLogsCurrentUserDeploymentDeployStepPipelineStepLogsEntriesLogEntry) GetText() string {
	return v.Text
}

// GetTimestamp returns getDeploymentLogsCurrentUserDeploymentDeployStepPipelineStepLogsEntriesLogEntry.Timestamp, and is useful for accessing the field via an interface.
func (v *getDeploymentLogsCurrentUserDeploymentDeployStepPipelineStepLogsEntriesLogEntry) GetTimestamp() time.Time {
	return v.Timestamp
}

// getDeploymentLogsResponse is returned by getDeploymentLogs on success.
type getDeploymentLogsResponse struct {
	CurrentUser getDeploymentLogsCurrentUser `json:"currentUser"`
}

// GetCurrentUser returns getDeploymentLogsResponse.CurrentUser, and is useful for accessing the field via an interface.
func (v *getDeploymentLogsResponse) GetCurrentUser() getDeploymentLogsCurrentUser {
	return v.CurrentUser
}

// getDeploymentReplicaStatusCurrentUser includes the requested fields of the GraphQL type User.
type getDeploymentReplicaStatusCurrentUser struct {
	Deployment getDeploymentReplicaStatusCurrentUserDeployment `json:"deployment"`
}

// GetDeployment returns getDeploymentReplicaStatusCurrentUser.Deployment, and is useful for accessing the field via an interface.
func (v *getDeploymentReplicaStatusCurrentUser) GetDeployment() getDeploymentReplicaStatusCurrentUserDeployment {
	return v.Deployment
}

// getDeploymentReplicaStatusCurrentUserDeployment includes the requested fields of the GraphQL type Deployment.
type getDeploymentReplicaStatusCurrentUserDeployment struct {
	DeployStatus getDeploymentReplicaStatusCurrentUserDeploymentDeployStatus `json:"deployStatus"`
}

// GetDeployStatus returns getDeploymentReplicaStatusCurrentUserDeployment.DeployStatus, and is useful for accessing the field via an interface.
func (v *getDeploymentReplicaStatusCurrentUserDeployment) GetDeployStatus() getDeploymentReplicaStatusCurrentUserDeploymentDeployStatus {
	return v.DeployStatus
}

// getDeploymentReplicaStatusCurrentUserDeploymentDeployStatus includes the requested fields of the GraphQL type DeployStatus.
type getDeploymentReplicaStatusCurrentUserDeploymentDeployStatus struct {
	Replicas        int    `json:"replicas"`
	ReadyReplicas   int    `json:"readyReplicas"`
	RunningReplicas int    `json:"runningReplicas"`
	State           string `json:"state"`
	ErrorMessage    string `json:"errorMessage"`
}

// GetReplicas returns getDeploymentReplicaStatusCurrentUserDeploymentDeployStatus.Replicas, and is useful for accessing the field via an interface.
func (v *getDeploymentReplicaStatusCurrentUserDeploymentDeployStatus) GetReplicas() int {
	return v.Replicas
}

// GetReadyReplicas returns getDeploymentReplicaStatusCurrentUserDeploymentDeployStatus.ReadyReplicas, and is useful for accessing the field via an interface.
func (v *getDeploymentReplicaStatusCurrentUserDeploymentDeployStatus) GetReadyReplicas() int {
	return v.ReadyReplicas
}

// GetRunningReplicas returns getDeploymentReplicaStatusCurrentUserDeploymentDeployStatus.RunningReplicas, and is useful for accessing the field via an interface.
func (v *getDeploymentReplicaStatusCurrentUserDeploymentDeployStatus) GetRunningReplicas() int {
	return v.RunningReplicas
}

// GetState returns getDeploymentReplicaStatusCurrentUserDeploymentDeployStatus.State, and is useful for accessing the field via an interface.
func (v *getDeploymentReplicaStatusCurrentUserDeploymentDeployStatus) GetState() string {
	return v.State
}

// GetErrorMessage returns getDeploymentReplicaStatusCurrentUserDeploymentDeployStatus.ErrorMessage, and is useful for accessing the field via an interface.
func (v *getDeploymentReplicaStatusCurrentUserDeploymentDeployStatus) GetErrorMessage() string {
	return v.ErrorMessage
}

// getDeploymentReplicaStatusResponse is returned by getDeploymentReplicaStatus on success.
type getDeploymentReplicaStatusResponse struct {
	CurrentUser getDeploymentReplicaStatusCurrentUser `json:"currentUser"`
}

// GetCurrentUser returns getDeploymentReplicaStatusResponse.CurrentUser, and is useful for accessing the field via an interface.
func (v *getDeploymentReplicaStatusResponse) GetCurrentUser() getDeploymentReplicaStatusCurrentUser {
	return v.CurrentUser
}

// getEnvVarsCurrentUser includes the requested fields of the GraphQL type User.
type getEnvVarsCurrentUser struct {
	Repo getEnvVarsCurrentUserRepo `json:"repo"`
}

// GetRepo returns getEnvVarsCurrentUser.Repo, and is useful for accessing the field via an interface.
func (v *getEnvVarsCurrentUser) GetRepo() getEnvVarsCurrentUserRepo { return v.Repo }

// getEnvVarsCurrentUserRepo includes the requested fields of the GraphQL type Repo.
type getEnvVarsCurrentUserRepo struct {
	Envs []getEnvVarsCurrentUserRepoEnvsEnvVar `json:"envs"`
}

// GetEnvs returns getEnvVarsCurrentUserRepo.Envs, and is useful for accessing the field via an interface.
func (v *getEnvVarsCurrentUserRepo) GetEnvs() []getEnvVarsCurrentUserRepoEnvsEnvVar { return v.Envs }

// getEnvVarsCurrentUserRepoEnvsEnvVar includes the requested fields of the GraphQL type EnvVar.
type getEnvVarsCurrentUserRepoEnvsEnvVar struct {
	Name  string `json:"name"`
	Value string `json:"value"`
}

// GetName returns getEnvVarsCurrentUserRepoEnvsEnvVar.Name, and is useful for accessing the field via an interface.
func (v *getEnvVarsCurrentUserRepoEnvsEnvVar) GetName() string { return v.Name }

// GetValue returns getEnvVarsCurrentUserRepoEnvsEnvVar.Value, and is useful for accessing the field via an interface.
func (v *getEnvVarsCurrentUserRepoEnvsEnvVar) GetValue() string { return v.Value }

// getEnvVarsResponse is returned by getEnvVars on success.
type getEnvVarsResponse struct {
	CurrentUser getEnvVarsCurrentUser `json:"currentUser"`
}

// GetCurrentUser returns getEnvVarsResponse.CurrentUser, and is useful for accessing the field via an interface.
func (v *getEnvVarsResponse) GetCurrentUser() getEnvVarsCurrentUser { return v.CurrentUser }

// getJobLogsRepo includes the requested fields of the GraphQL type Repo.
type getJobLogsRepo struct {
	JobRun getJobLogsRepoJobRun `json:"jobRun"`
}

// GetJobRun returns getJobLogsRepo.JobRun, and is useful for accessing the field via an interface.
func (v *getJobLogsRepo) GetJobRun() getJobLogsRepoJobRun { return v.JobRun }

// getJobLogsRepoJobRun includes the requested fields of the GraphQL type JobRun.
type getJobLogsRepoJobRun struct {
	Logs getJobLogsRepoJobRunLogs `json:"logs"`
}

// GetLogs returns getJobLogsRepoJobRun.Logs, and is useful for accessing the field via an interface.
func (v *getJobLogsRepoJobRun) GetLogs() getJobLogsRepoJobRunLogs { return v.Logs }

// getJobLogsRepoJobRunLogs includes the requested fields of the GraphQL type Logs.
type getJobLogsRepoJobRunLogs struct {
	Entries []getJobLogsRepoJobRunLogsEntriesLogEntry `json:"entries"`
}

// GetEntries returns getJobLogsRepoJobRunLogs.Entries, and is useful for accessing the field via an interface.
func (v *getJobLogsRepoJobRunLogs) GetEntries() []getJobLogsRepoJobRunLogsEntriesLogEntry {
	return v.Entries
}

// getJobLogsRepoJobRunLogsEntriesLogEntry includes the requested fields of the GraphQL type LogEntry.
type getJobLogsRepoJobRunLogsEntriesLogEntry struct {
	Text      string    `json:"text"`
	Timestamp time.Time `json:"timestamp"`
}

// GetText returns getJobLogsRepoJobRunLogsEntriesLogEntry.Text, and is useful for accessing the field via an interface.
func (v *getJobLogsRepoJobRunLogsEntriesLogEntry) GetText() string { return v.Text }

// GetTimestamp returns getJobLogsRepoJobRunLogsEntriesLogEntry.Timestamp, and is useful for accessing the field via an interface.
func (v *getJobLogsRepoJobRunLogsEntriesLogEntry) GetTimestamp() time.Time { return v.Timestamp }

// getJobLogsResponse is returned by getJobLogs on success.
type getJobLogsResponse struct {
	Repo getJobLogsRepo `json:"repo"`
}

// GetRepo returns getJobLogsResponse.Repo, and is useful for accessing the field via an interface.
func (v *getJobLogsResponse) GetRepo() getJobLogsRepo { return v.Repo }

// getJobRepo includes the requested fields of the GraphQL type Repo.
type getJobRepo struct {
	JobRun getJobRepoJobRun `json:"jobRun"`
}

// GetJobRun returns getJobRepo.JobRun, and is useful for accessing the field via an interface.
func (v *getJobRepo) GetJobRun() getJobRepoJobRun { return v.JobRun }

// getJobRepoJobRun includes the requested fields of the GraphQL type JobRun.
type getJobRepoJobRun struct {
	Id    uuid.UUID   `json:"id"`
	State JobRunState `json:"state"`
}

// GetId returns getJobRepoJobRun.Id, and is useful for accessing the field via an interface.
func (v *getJobRepoJobRun) GetId() uuid.UUID { return v.Id }

// GetState returns getJobRepoJobRun.State, and is useful for accessing the field via an interface.
func (v *getJobRepoJobRun) GetState() JobRunState { return v.State }

// getJobResponse is returned by getJob on success.
type getJobResponse struct {
	Repo getJobRepo `json:"repo"`
}

// GetRepo returns getJobResponse.Repo, and is useful for accessing the field via an interface.
func (v *getJobResponse) GetRepo() getJobRepo { return v.Repo }

// getLatestDeploymentRepo includes the requested fields of the GraphQL type Repo.
type getLatestDeploymentRepo struct {
	Branch getLatestDeploymentRepoBranchRepoBranchV2 `json:"branch"`
}

// GetBranch returns getLatestDeploymentRepo.Branch, and is useful for accessing the field via an interface.
func (v *getLatestDeploymentRepo) GetBranch() getLatestDeploymentRepoBranchRepoBranchV2 {
	return v.Branch
}

// getLatestDeploymentRepoBranchRepoBranchV2 includes the requested fields of the GraphQL type RepoBranchV2.
type getLatestDeploymentRepoBranchRepoBranchV2 struct {
	LatestDeployment getLatestDeploymentRepoBranchRepoBranchV2LatestDeployment `json:"latestDeployment"`
}

// GetLatestDeployment returns getLatestDeploymentRepoBranchRepoBranchV2.LatestDeployment, and is useful for accessing the field via an interface.
func (v *getLatestDeploymentRepoBranchRepoBranchV2) GetLatestDeployment() getLatestDeploymentRepoBranchRepoBranchV2LatestDeployment {
	return v.LatestDeployment
}

// getLatestDeploymentRepoBranchRepoBranchV2LatestDeployment includes the requested fields of the GraphQL type Deployment.
type getLatestDeploymentRepoBranchRepoBranchV2LatestDeployment struct {
	Id              uuid.UUID        `json:"id"`
	Status          DeploymentStatus `json:"status"`
	Branch          string           `json:"branch"`
	Endpoints       []string         `json:"endpoints"`
	PrivateEndpoint string           `json:"privateEndpoint"`
}

// GetId returns getLatestDeploymentRepoBranchRepoBranchV2LatestDeployment.Id, and is useful for accessing the field via an interface.
func (v *getLatestDeploymentRepoBranchRepoBranchV2LatestDeployment) GetId() uuid.UUID { return v.Id }

// GetStatus returns getLatestDeploymentRepoBranchRepoBranchV2LatestDeployment.Status, and is useful for accessing the field via an interface.
func (v *getLatestDeploymentRepoBranchRepoBranchV2LatestDeployment) GetStatus() DeploymentStatus {
	return v.Status
}

// GetBranch returns getLatestDeploymentRepoBranchRepoBranchV2LatestDeployment.Branch, and is useful for accessing the field via an interface.
func (v *getLatestDeploymentRepoBranchRepoBranchV2LatestDeployment) GetBranch() string {
	return v.Branch
}

// GetEndpoints returns getLatestDeploymentRepoBranchRepoBranchV2LatestDeployment.Endpoints, and is useful for accessing the field via an interface.
func (v *getLatestDeploymentRepoBranchRepoBranchV2LatestDeployment) GetEndpoints() []string {
	return v.Endpoints
}

// GetPrivateEndpoint returns getLatestDeploymentRepoBranchRepoBranchV2LatestDeployment.PrivateEndpoint, and is useful for accessing the field via an interface.
func (v *getLatestDeploymentRepoBranchRepoBranchV2LatestDeployment) GetPrivateEndpoint() string {
	return v.PrivateEndpoint
}

// getLatestDeploymentResponse is returned by getLatestDeployment on success.
type getLatestDeploymentResponse struct {
	Repo getLatestDeploymentRepo `json:"repo"`
}

// GetRepo returns getLatestDeploymentResponse.Repo, and is useful for accessing the field via an interface.
func (v *getLatestDeploymentResponse) GetRepo() getLatestDeploymentRepo { return v.Repo }

// getProductionBranchCurrentUser includes the requested fields of the GraphQL type User.
type getProductionBranchCurrentUser struct {
	Repo getProductionBranchCurrentUserRepo `json:"repo"`
}

// GetRepo returns getProductionBranchCurrentUser.Repo, and is useful for accessing the field via an interface.
func (v *getProductionBranchCurrentUser) GetRepo() getProductionBranchCurrentUserRepo { return v.Repo }

// getProductionBranchCurrentUserRepo includes the requested fields of the GraphQL type Repo.
type getProductionBranchCurrentUserRepo struct {
	Id                 uuid.UUID                                                        `json:"id"`
	ProductionBranchV2 getProductionBranchCurrentUserRepoProductionBranchV2RepoBranchV2 `json:"productionBranchV2"`
}

// GetId returns getProductionBranchCurrentUserRepo.Id, and is useful for accessing the field via an interface.
func (v *getProductionBranchCurrentUserRepo) GetId() uuid.UUID { return v.Id }

// GetProductionBranchV2 returns getProductionBranchCurrentUserRepo.ProductionBranchV2, and is useful for accessing the field via an interface.
func (v *getProductionBranchCurrentUserRepo) GetProductionBranchV2() getProductionBranchCurrentUserRepoProductionBranchV2RepoBranchV2 {
	return v.ProductionBranchV2
}

// getProductionBranchCurrentUserRepoProductionBranchV2RepoBranchV2 includes the requested fields of the GraphQL type RepoBranchV2.
type getProductionBranchCurrentUserRepoProductionBranchV2RepoBranchV2 struct {
	Name string `json:"name"`
}

// GetName returns getProductionBranchCurrentUserRepoProductionBranchV2RepoBranchV2.Name, and is useful for accessing the field via an interface.
func (v *getProductionBranchCurrentUserRepoProductionBranchV2RepoBranchV2) GetName() string {
	return v.Name
}

// getProductionBranchResponse is returned by getProductionBranch on success.
type getProductionBranchResponse struct {
	CurrentUser getProductionBranchCurrentUser `json:"currentUser"`
}

// GetCurrentUser returns getProductionBranchResponse.CurrentUser, and is useful for accessing the field via an interface.
func (v *getProductionBranchResponse) GetCurrentUser() getProductionBranchCurrentUser {
	return v.CurrentUser
}

// getProductionDeploymentRepo includes the requested fields of the GraphQL type Repo.
type getProductionDeploymentRepo struct {
	ProductionDeployment getProductionDeploymentRepoProductionDeployment `json:"productionDeployment"`
}

// GetProductionDeployment returns getProductionDeploymentRepo.ProductionDeployment, and is useful for accessing the field via an interface.
func (v *getProductionDeploymentRepo) GetProductionDeployment() getProductionDeploymentRepoProductionDeployment {
	return v.ProductionDeployment
}

// getProductionDeploymentRepoProductionDeployment includes the requested fields of the GraphQL type Deployment.
type getProductionDeploymentRepoProductionDeployment struct {
	Id              uuid.UUID        `json:"id"`
	Status          DeploymentStatus `json:"status"`
	Endpoints       []string         `json:"endpoints"`
	PrivateEndpoint string           `json:"privateEndpoint"`
}

// GetId returns getProductionDeploymentRepoProductionDeployment.Id, and is useful for accessing the field via an interface.
func (v *getProductionDeploymentRepoProductionDeployment) GetId() uuid.UUID { return v.Id }

// GetStatus returns getProductionDeploymentRepoProductionDeployment.Status, and is useful for accessing the field via an interface.
func (v *getProductionDeploymentRepoProductionDeployment) GetStatus() DeploymentStatus {
	return v.Status
}

// GetEndpoints returns getProductionDeploymentRepoProductionDeployment.Endpoints, and is useful for accessing the field via an interface.
func (v *getProductionDeploymentRepoProductionDeployment) GetEndpoints() []string { return v.Endpoints }

// GetPrivateEndpoint returns getProductionDeploymentRepoProductionDeployment.PrivateEndpoint, and is useful for accessing the field via an interface.
func (v *getProductionDeploymentRepoProductionDeployment) GetPrivateEndpoint() string {
	return v.PrivateEndpoint
}

// getProductionDeploymentResponse is returned by getProductionDeployment on success.
type getProductionDeploymentResponse struct {
	Repo getProductionDeploymentRepo `json:"repo"`
}

// GetRepo returns getProductionDeploymentResponse.Repo, and is useful for accessing the field via an interface.
func (v *getProductionDeploymentResponse) GetRepo() getProductionDeploymentRepo { return v.Repo }

// getProjectByPathRepo includes the requested fields of the GraphQL type Repo.
type getProjectByPathRepo struct {
	Id uuid.UUID `json:"id"`
}

// GetId returns getProjectByPathRepo.Id, and is useful for accessing the field via an interface.
func (v *getProjectByPathRepo) GetId() uuid.UUID { return v.Id }

// getProjectByPathResponse is returned by getProjectByPath on success.
type getProjectByPathResponse struct {
	Repo getProjectByPathRepo `json:"repo"`
}

// GetRepo returns getProjectByPathResponse.Repo, and is useful for accessing the field via an interface.
func (v *getProjectByPathResponse) GetRepo() getProjectByPathRepo { return v.Repo }

// getProjectPathRepo includes the requested fields of the GraphQL type Repo.
type getProjectPathRepo struct {
	FullPath string `json:"fullPath"`
}

// GetFullPath returns getProjectPathRepo.FullPath, and is useful for accessing the field via an interface.
func (v *getProjectPathRepo) GetFullPath() string { return v.FullPath }

// getProjectPathResponse is returned by getProjectPath on success.
type getProjectPathResponse struct {
	Repo getProjectPathRepo `json:"repo"`
}

// GetRepo returns getProjectPathResponse.Repo, and is useful for accessing the field via an interface.
func (v *getProjectPathResponse) GetRepo() getProjectPathRepo { return v.Repo }

// getRepoRepo includes the requested fields of the GraphQL type Repo.
type getRepoRepo struct {
	Id uuid.UUID `json:"id"`
}

// GetId returns getRepoRepo.Id, and is useful for accessing the field via an interface.
func (v *getRepoRepo) GetId() uuid.UUID { return v.Id }

// getRepoResponse is returned by getRepo on success.
type getRepoResponse struct {
	Repo getRepoRepo `json:"repo"`
}

// GetRepo returns getRepoResponse.Repo, and is useful for accessing the field via an interface.
func (v *getRepoResponse) GetRepo() getRepoRepo { return v.Repo }

// getRuntimeLogsCurrentUser includes the requested fields of the GraphQL type User.
type getRuntimeLogsCurrentUser struct {
	Deployment getRuntimeLogsCurrentUserDeployment `json:"deployment"`
}

// GetDeployment returns getRuntimeLogsCurrentUser.Deployment, and is useful for accessing the field via an interface.
func (v *getRuntimeLogsCurrentUser) GetDeployment() getRuntimeLogsCurrentUserDeployment {
	return v.Deployment
}

// getRuntimeLogsCurrentUserDeployment includes the requested fields of the GraphQL type Deployment.
type getRuntimeLogsCurrentUserDeployment struct {
	Logs []getRuntimeLogsCurrentUserDeploymentLogsLogEntry `json:"logs"`
}

// GetLogs returns getRuntimeLogsCurrentUserDeployment.Logs, and is useful for accessing the field via an interface.
func (v *getRuntimeLogsCurrentUserDeployment) GetLogs() []getRuntimeLogsCurrentUserDeploymentLogsLogEntry {
	return v.Logs
}

// getRuntimeLogsCurrentUserDeploymentLogsLogEntry includes the requested fields of the GraphQL type LogEntry.
type getRuntimeLogsCurrentUserDeploymentLogsLogEntry struct {
	Text      string    `json:"text"`
	Timestamp time.Time `json:"timestamp"`
}

// GetText returns getRuntimeLogsCurrentUserDeploymentLogsLogEntry.Text, and is useful for accessing the field via an interface.
func (v *getRuntimeLogsCurrentUserDeploymentLogsLogEntry) GetText() string { return v.Text }

// GetTimestamp returns getRuntimeLogsCurrentUserDeploymentLogsLogEntry.Timestamp, and is useful for accessing the field via an interface.
func (v *getRuntimeLogsCurrentUserDeploymentLogsLogEntry) GetTimestamp() time.Time {
	return v.Timestamp
}

// getRuntimeLogsResponse is returned by getRuntimeLogs on success.
type getRuntimeLogsResponse struct {
	CurrentUser getRuntimeLogsCurrentUser `json:"currentUser"`
}

// GetCurrentUser returns getRuntimeLogsResponse.CurrentUser, and is useful for accessing the field via an interface.
func (v *getRuntimeLogsResponse) GetCurrentUser() getRuntimeLogsCurrentUser { return v.CurrentUser }

// runJobResponse is returned by runJob on success.
type runJobResponse struct {
	RunJob runJobRunJobJobRun `json:"runJob"`
}

// GetRunJob returns runJobResponse.RunJob, and is useful for accessing the field via an interface.
func (v *runJobResponse) GetRunJob() runJobRunJobJobRun { return v.RunJob }

// runJobRunJobJobRun includes the requested fields of the GraphQL type JobRun.
type runJobRunJobJobRun struct {
	State JobRunState `json:"state"`
	Id    uuid.UUID   `json:"id"`
}

// GetState returns runJobRunJobJobRun.State, and is useful for accessing the field via an interface.
func (v *runJobRunJobJobRun) GetState() JobRunState { return v.State }

// GetId returns runJobRunJobJobRun.Id, and is useful for accessing the field via an interface.
func (v *runJobRunJobJobRun) GetId() uuid.UUID { return v.Id }

// setEnvVarsResponse is returned by setEnvVars on success.
type setEnvVarsResponse struct {
	SetRepoEnvs setEnvVarsSetRepoEnvsRepo `json:"setRepoEnvs"`
}

// GetSetRepoEnvs returns setEnvVarsResponse.SetRepoEnvs, and is useful for accessing the field via an interface.
func (v *setEnvVarsResponse) GetSetRepoEnvs() setEnvVarsSetRepoEnvsRepo { return v.SetRepoEnvs }

// setEnvVarsSetRepoEnvsRepo includes the requested fields of the GraphQL type Repo.
type setEnvVarsSetRepoEnvsRepo struct {
	Envs []setEnvVarsSetRepoEnvsRepoEnvsEnvVar `json:"envs"`
}

// GetEnvs returns setEnvVarsSetRepoEnvsRepo.Envs, and is useful for accessing the field via an interface.
func (v *setEnvVarsSetRepoEnvsRepo) GetEnvs() []setEnvVarsSetRepoEnvsRepoEnvsEnvVar { return v.Envs }

// setEnvVarsSetRepoEnvsRepoEnvsEnvVar includes the requested fields of the GraphQL type EnvVar.
type setEnvVarsSetRepoEnvsRepoEnvsEnvVar struct {
	Id uuid.UUID `json:"id"`
}

// GetId returns setEnvVarsSetRepoEnvsRepoEnvsEnvVar.Id, and is useful for accessing the field via an interface.
func (v *setEnvVarsSetRepoEnvsRepoEnvsEnvVar) GetId() uuid.UUID { return v.Id }

// updateBranchResponse is returned by updateBranch on success.
type updateBranchResponse struct {
	UpdateBranch updateBranchUpdateBranchRepoBranchV2 `json:"updateBranch"`
}

// GetUpdateBranch returns updateBranchResponse.UpdateBranch, and is useful for accessing the field via an interface.
func (v *updateBranchResponse) GetUpdateBranch() updateBranchUpdateBranchRepoBranchV2 {
	return v.UpdateBranch
}

// updateBranchUpdateBranchRepoBranchV2 includes the requested fields of the GraphQL type RepoBranchV2.
type updateBranchUpdateBranchRepoBranchV2 struct {
	Id uuid.UUID `json:"id"`
}

// GetId returns updateBranchUpdateBranchRepoBranchV2.Id, and is useful for accessing the field via an interface.
func (v *updateBranchUpdateBranchRepoBranchV2) GetId() uuid.UUID { return v.Id }

// updateClusterResponse is returned by updateCluster on success.
type updateClusterResponse struct {
	UpdateCluster updateClusterUpdateCluster `json:"updateCluster"`
}

// GetUpdateCluster returns updateClusterResponse.UpdateCluster, and is useful for accessing the field via an interface.
func (v *updateClusterResponse) GetUpdateCluster() updateClusterUpdateCluster { return v.UpdateCluster }

// updateClusterUpdateCluster includes the requested fields of the GraphQL type Cluster.
type updateClusterUpdateCluster struct {
	Id uuid.UUID `json:"id"`
}

// GetId returns updateClusterUpdateCluster.Id, and is useful for accessing the field via an interface.
func (v *updateClusterUpdateCluster) GetId() uuid.UUID { return v.Id }

// updateProjectResponse is returned by updateProject on success.
type updateProjectResponse struct {
	UpdateProject updateProjectUpdateProjectRepo `json:"updateProject"`
}

// GetUpdateProject returns updateProjectResponse.UpdateProject, and is useful for accessing the field via an interface.
func (v *updateProjectResponse) GetUpdateProject() updateProjectUpdateProjectRepo {
	return v.UpdateProject
}

// updateProjectUpdateProjectRepo includes the requested fields of the GraphQL type Repo.
type updateProjectUpdateProjectRepo struct {
	Id uuid.UUID `json:"id"`
}

// GetId returns updateProjectUpdateProjectRepo.Id, and is useful for accessing the field via an interface.
func (v *updateProjectUpdateProjectRepo) GetId() uuid.UUID { return v.Id }

func GetCloudAWS(
	ctx context.Context,
	client graphql.Client,
	id uuid.UUID,
) (*GetCloudAWSResponse, error) {
	__input := __GetCloudAWSInput{
		Id: id,
	}
	var err error

	var retval GetCloudAWSResponse
	err = client.MakeRequest(
		ctx,
		"GetCloudAWS",
		`
query GetCloudAWS ($id: UUID!) {
	currentUser {
		awsAccount(id: $id) {
			id
			roleARN
			externalID
		}
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

func GetCloudDigitalOcean(
	ctx context.Context,
	client graphql.Client,
	id uuid.UUID,
) (*GetCloudDigitalOceanResponse, error) {
	__input := __GetCloudDigitalOceanInput{
		Id: id,
	}
	var err error

	var retval GetCloudDigitalOceanResponse
	err = client.MakeRequest(
		ctx,
		"GetCloudDigitalOcean",
		`
query GetCloudDigitalOcean ($id: UUID!) {
	currentUser {
		doAccount(id: $id) {
			id
			accessToken
		}
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

func GetCloudGCP(
	ctx context.Context,
	client graphql.Client,
	id uuid.UUID,
) (*GetCloudGCPResponse, error) {
	__input := __GetCloudGCPInput{
		Id: id,
	}
	var err error

	var retval GetCloudGCPResponse
	err = client.MakeRequest(
		ctx,
		"GetCloudGCP",
		`
query GetCloudGCP ($id: UUID!) {
	currentUser {
		gcpAccount(id: $id) {
			id
			projectID
			credentials
		}
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

func GetCloudLinode(
	ctx context.Context,
	client graphql.Client,
	id uuid.UUID,
) (*GetCloudLinodeResponse, error) {
	__input := __GetCloudLinodeInput{
		Id: id,
	}
	var err error

	var retval GetCloudLinodeResponse
	err = client.MakeRequest(
		ctx,
		"GetCloudLinode",
		`
query GetCloudLinode ($id: UUID!) {
	currentUser {
		linodeAccount(id: $id) {
			id
			accessToken
		}
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

func buildRepo(
	ctx context.Context,
	client graphql.Client,
	id uuid.UUID,
	branch string,
	noCache bool,
) (*buildRepoResponse, error) {
	__input := __buildRepoInput{
		Id:      id,
		Branch:  branch,
		NoCache: noCache,
	}
	var err error

	var retval buildRepoResponse
	err = client.MakeRequest(
		ctx,
		"buildRepo",
		`
mutation buildRepo ($id: ID!, $branch: String, $noCache: Boolean) {
	buildRepo(id: $id, branch: $branch, noCache: $noCache) {
		deployments {
			id
			status
			branch
			endpoints
			privateEndpoint
		}
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

func buildRepoDefaultBranch(
	ctx context.Context,
	client graphql.Client,
	id uuid.UUID,
	noCache bool,
) (*buildRepoDefaultBranchResponse, error) {
	__input := __buildRepoDefaultBranchInput{
		Id:      id,
		NoCache: noCache,
	}
	var err error

	var retval buildRepoDefaultBranchResponse
	err = client.MakeRequest(
		ctx,
		"buildRepoDefaultBranch",
		`
mutation buildRepoDefaultBranch ($id: ID!, $noCache: Boolean) {
	buildRepo(id: $id, noCache: $noCache) {
		deployments {
			id
			status
			branch
			endpoints
			privateEndpoint
		}
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

func delete(
	ctx context.Context,
	client graphql.Client,
	id uuid.UUID,
) (*deleteResponse, error) {
	__input := __deleteInput{
		Id: id,
	}
	var err error

	var retval deleteResponse
	err = client.MakeRequest(
		ctx,
		"delete",
		`
mutation delete ($id: ID!) {
	deleteRepo(id: $id)
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

func deployRepoBranch(
	ctx context.Context,
	client graphql.Client,
	branch string,
	projectId uuid.UUID,
) (*deployRepoBranchResponse, error) {
	__input := __deployRepoBranchInput{
		Branch:    branch,
		ProjectId: projectId,
	}
	var err error

	var retval deployRepoBranchResponse
	err = client.MakeRequest(
		ctx,
		"deployRepoBranch",
		`
mutation deployRepoBranch ($branch: String!, $projectId: UUID!) {
	deployRepoBranch(input: {id:$projectId,branch:$branch}) {
		deployments {
			id
			status
			branch
			endpoints
			privateEndpoint
		}
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

func getBuildLogs(
	ctx context.Context,
	client graphql.Client,
	id uuid.UUID,
) (*getBuildLogsResponse, error) {
	__input := __getBuildLogsInput{
		Id: id,
	}
	var err error

	var retval getBuildLogsResponse
	err = client.MakeRequest(
		ctx,
		"getBuildLogs",
		`
query getBuildLogs ($id: ID!) {
	currentUser {
		deployment(id: $id) {
			build {
				logs {
					entries {
						text
						timestamp
					}
				}
			}
		}
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

func getClusterKubeconfig(
	ctx context.Context,
	client graphql.Client,
	id uuid.UUID,
) (*getClusterKubeconfigResponse, error) {
	__input := __getClusterKubeconfigInput{
		Id: id,
	}
	var err error

	var retval getClusterKubeconfigResponse
	err = client.MakeRequest(
		ctx,
		"getClusterKubeconfig",
		`
query getClusterKubeconfig ($id: UUID!) {
	currentUser {
		cluster(id: $id) {
			id
			name
			kubeconfig
		}
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

func getCurrentUser(
	ctx context.Context,
	client graphql.Client,
) (*getCurrentUserResponse, error) {
	var err error

	var retval getCurrentUserResponse
	err = client.MakeRequest(
		ctx,
		"getCurrentUser",
		`
query getCurrentUser {
	currentUser {
		id
		login
	}
}
`,
		&retval,
		nil,
	)
	return &retval, err
}

func getDeploymentInfo(
	ctx context.Context,
	client graphql.Client,
	id uuid.UUID,
) (*getDeploymentInfoResponse, error) {
	__input := __getDeploymentInfoInput{
		Id: id,
	}
	var err error

	var retval getDeploymentInfoResponse
	err = client.MakeRequest(
		ctx,
		"getDeploymentInfo",
		`
query getDeploymentInfo ($id: ID!) {
	currentUser {
		deployment(id: $id) {
			id
			status
			endpoints
			privateEndpoint
			errorMessage
		}
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

func getDeploymentLogs(
	ctx context.Context,
	client graphql.Client,
	id uuid.UUID,
) (*getDeploymentLogsResponse, error) {
	__input := __getDeploymentLogsInput{
		Id: id,
	}
	var err error

	var retval getDeploymentLogsResponse
	err = client.MakeRequest(
		ctx,
		"getDeploymentLogs",
		`
query getDeploymentLogs ($id: ID!) {
	currentUser {
		deployment(id: $id) {
			deployStep {
				logs {
					entries {
						text
						timestamp
					}
				}
			}
		}
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

func getDeploymentReplicaStatus(
	ctx context.Context,
	client graphql.Client,
	id uuid.UUID,
) (*getDeploymentReplicaStatusResponse, error) {
	__input := __getDeploymentReplicaStatusInput{
		Id: id,
	}
	var err error

	var retval getDeploymentReplicaStatusResponse
	err = client.MakeRequest(
		ctx,
		"getDeploymentReplicaStatus",
		`
query getDeploymentReplicaStatus ($id: ID!) {
	currentUser {
		deployment(id: $id) {
			deployStatus {
				replicas
				readyReplicas
				runningReplicas
				state
				errorMessage
			}
		}
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

func getEnvVars(
	ctx context.Context,
	client graphql.Client,
	id uuid.UUID,
) (*getEnvVarsResponse, error) {
	__input := __getEnvVarsInput{
		Id: id,
	}
	var err error

	var retval getEnvVarsResponse
	err = client.MakeRequest(
		ctx,
		"getEnvVars",
		`
query getEnvVars ($id: ID!) {
	currentUser {
		repo(id: $id) {
			envs {
				name
				value
			}
		}
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

func getJob(
	ctx context.Context,
	client graphql.Client,
	projectID uuid.UUID,
	jobID uuid.UUID,
) (*getJobResponse, error) {
	__input := __getJobInput{
		ProjectID: projectID,
		JobID:     jobID,
	}
	var err error

	var retval getJobResponse
	err = client.MakeRequest(
		ctx,
		"getJob",
		`
query getJob ($projectID: UUID!, $jobID: UUID!) {
	repo(id: $projectID) {
		jobRun(id: $jobID) {
			id
			state
		}
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

func getJobLogs(
	ctx context.Context,
	client graphql.Client,
	repoID uuid.UUID,
	jobID uuid.UUID,
) (*getJobLogsResponse, error) {
	__input := __getJobLogsInput{
		RepoID: repoID,
		JobID:  jobID,
	}
	var err error

	var retval getJobLogsResponse
	err = client.MakeRequest(
		ctx,
		"getJobLogs",
		`
query getJobLogs ($repoID: UUID!, $jobID: UUID!) {
	repo(id: $repoID) {
		jobRun(id: $jobID) {
			logs {
				entries {
					text
					timestamp
				}
			}
		}
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

func getLatestDeployment(
	ctx context.Context,
	client graphql.Client,
	project string,
	branch string,
) (*getLatestDeploymentResponse, error) {
	__input := __getLatestDeploymentInput{
		Project: project,
		Branch:  branch,
	}
	var err error

	var retval getLatestDeploymentResponse
	err = client.MakeRequest(
		ctx,
		"getLatestDeployment",
		`
query getLatestDeployment ($project: String, $branch: String) {
	repo(path: $project) {
		branch(name: $branch) {
			latestDeployment {
				id
				status
				branch
				endpoints
				privateEndpoint
			}
		}
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

func getProductionBranch(
	ctx context.Context,
	client graphql.Client,
	repoId uuid.UUID,
) (*getProductionBranchResponse, error) {
	__input := __getProductionBranchInput{
		RepoId: repoId,
	}
	var err error

	var retval getProductionBranchResponse
	err = client.MakeRequest(
		ctx,
		"getProductionBranch",
		`
query getProductionBranch ($repoId: ID!) {
	currentUser {
		repo(id: $repoId) {
			id
			productionBranchV2 {
				name
			}
		}
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

func getProductionDeployment(
	ctx context.Context,
	client graphql.Client,
	project string,
) (*getProductionDeploymentResponse, error) {
	__input := __getProductionDeploymentInput{
		Project: project,
	}
	var err error

	var retval getProductionDeploymentResponse
	err = client.MakeRequest(
		ctx,
		"getProductionDeployment",
		`
query getProductionDeployment ($project: String!) {
	repo(path: $project) {
		productionDeployment {
			id
			status
			endpoints
			privateEndpoint
		}
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

func getProjectByPath(
	ctx context.Context,
	client graphql.Client,
	path string,
) (*getProjectByPathResponse, error) {
	__input := __getProjectByPathInput{
		Path: path,
	}
	var err error

	var retval getProjectByPathResponse
	err = client.MakeRequest(
		ctx,
		"getProjectByPath",
		`
query getProjectByPath ($path: String) {
	repo(path: $path) {
		id
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

func getProjectPath(
	ctx context.Context,
	client graphql.Client,
	id uuid.UUID,
) (*getProjectPathResponse, error) {
	__input := __getProjectPathInput{
		Id: id,
	}
	var err error

	var retval getProjectPathResponse
	err = client.MakeRequest(
		ctx,
		"getProjectPath",
		`
query getProjectPath ($id: UUID!) {
	repo(id: $id) {
		fullPath
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

func getRepo(
	ctx context.Context,
	client graphql.Client,
	path string,
) (*getRepoResponse, error) {
	__input := __getRepoInput{
		Path: path,
	}
	var err error

	var retval getRepoResponse
	err = client.MakeRequest(
		ctx,
		"getRepo",
		`
query getRepo ($path: String!) {
	repo(path: $path) {
		id
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

func getRuntimeLogs(
	ctx context.Context,
	client graphql.Client,
	id uuid.UUID,
) (*getRuntimeLogsResponse, error) {
	__input := __getRuntimeLogsInput{
		Id: id,
	}
	var err error

	var retval getRuntimeLogsResponse
	err = client.MakeRequest(
		ctx,
		"getRuntimeLogs",
		`
query getRuntimeLogs ($id: ID!) {
	currentUser {
		deployment(id: $id) {
			logs {
				text
				timestamp
			}
		}
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

func runJob(
	ctx context.Context,
	client graphql.Client,
	id uuid.UUID,
	command string,
	build bool,
) (*runJobResponse, error) {
	__input := __runJobInput{
		Id:      id,
		Command: command,
		Build:   build,
	}
	var err error

	var retval runJobResponse
	err = client.MakeRequest(
		ctx,
		"runJob",
		`
mutation runJob ($id: UUID!, $command: String!, $build: Boolean!) {
	runJob(input: {id:$id,runCommand:$command,build:$build}) {
		state
		id
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

func setEnvVars(
	ctx context.Context,
	client graphql.Client,
	id uuid.UUID,
	envs []EnvVarInput,
) (*setEnvVarsResponse, error) {
	__input := __setEnvVarsInput{
		Id:   id,
		Envs: envs,
	}
	var err error

	var retval setEnvVarsResponse
	err = client.MakeRequest(
		ctx,
		"setEnvVars",
		`
mutation setEnvVars ($id: ID!, $envs: [EnvVarInput!]!) {
	setRepoEnvs(input: {id:$id,envs:$envs}) {
		envs {
			id
		}
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

func updateBranch(
	ctx context.Context,
	client graphql.Client,
	image string,
	deploy bool,
	projectID uuid.UUID,
	branchName string,
) (*updateBranchResponse, error) {
	__input := __updateBranchInput{
		Image:      image,
		Deploy:     deploy,
		ProjectID:  projectID,
		BranchName: branchName,
	}
	var err error

	var retval updateBranchResponse
	err = client.MakeRequest(
		ctx,
		"updateBranch",
		`
mutation updateBranch ($image: String!, $deploy: Boolean, $projectID: UUID!, $branchName: String!) {
	updateBranch(input: {image:$image,deploy:$deploy,repoID:$projectID,name:$branchName}) {
		id
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

func updateCluster(
	ctx context.Context,
	client graphql.Client,
	id uuid.UUID,
	file string,
) (*updateClusterResponse, error) {
	__input := __updateClusterInput{
		Id:   id,
		File: file,
	}
	var err error

	var retval updateClusterResponse
	err = client.MakeRequest(
		ctx,
		"updateCluster",
		`
mutation updateCluster ($id: UUID!, $file: Upload!) {
	updateCluster(input: {id:$id,kubeconfig:$file}) {
		id
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

func updateProject(
	ctx context.Context,
	client graphql.Client,
	projectID uuid.UUID,
	image string,
) (*updateProjectResponse, error) {
	__input := __updateProjectInput{
		ProjectID: projectID,
		Image:     image,
	}
	var err error

	var retval updateProjectResponse
	err = client.MakeRequest(
		ctx,
		"updateProject",
		`
mutation updateProject ($projectID: ID!, $image: String!) {
	updateProject(input: {id:$projectID,dockerImage:$image}) {
		id
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}
